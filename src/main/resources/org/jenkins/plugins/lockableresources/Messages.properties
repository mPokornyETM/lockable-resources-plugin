# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * #
# Copyright (c) 2014, 6WIND S.A. All rights reserved.                 #
#                                                                     #
# This file is part of the Jenkins Lockable Resources Plugin and is   #
# published under the MIT license.                                    #
#                                                                     #
# See the "LICENSE.txt" file for more information.                    #
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * #

LockableResourcesRootAction.PermissionGroup=Lockable Resources
LockableResourcesRootAction.UnlockPermission=Unlock
LockableResourcesRootAction.UnlockPermission.Description=This permission grants the ability to manually \
  unlock resources that have been locked by builds.
LockableResourcesRootAction.ReservePermission=Reserve
LockableResourcesRootAction.ReservePermission.Description=This permission grants the ability to manually \
  reserve lockable resources outside of a build.
LockableResourcesRootAction.StealPermission=Steal
LockableResourcesRootAction.StealPermission.Description=This permission grants the ability to manually \
  "steal" resources that have been locked by builds or "reassign" those reserved by users.
LockableResourcesRootAction.ViewPermission=View
LockableResourcesRootAction.ViewPermission.Description=This permission grants the ability to view \
  lockable resources.
# Java errors
error.labelDoesNotExist=The resource label does not exist: {0}.
error.resourceDoesNotExist=The resource {0} does not exist.
error.labelOrNameMustBeSpecified=Either resource label or resource name must be specified.
error.labelAndNameSpecified=Resource label and resource name cannot be specified simultaneously.
error.labelAndNameOrGroovySpecified=Only resource label, groovy expression, or resource names can be defined, not more than one.
error.couldNotParseToint=Could not parse the given value as integer.
error.givenAmountIsGreaterThatResurcesAmount=Given amount %d is greater than amount of resources: %d.

# don not translate
log.resourceDoesNotExist=L1: The resource label does not exist: {0}.
log.resourceAlreadyLocked=L2: Resource [{0}] already reserved or locked!
log.lockMustWait=L3: Lock in in the build [{0}] must wait now. Reason:\n {1}
log.lockPossible=L4: The resource [{0}] will be locked by build [{1}].
log.unlockResource=L5: Unlock resources [{0}] used by build [{1}].

log.unlockMustWait=L6: Lock in in the build [{0}] must wait now. Reason:\n {1}
log.createResource=L7: The resource [{0}] will be created.
log.createResourceWithLabel=L8: The resource [{0}] will be created with labels {1}.

log.reserve.currentlyReservedByUser=L9: The user [{0}] tries to reserve resource [{1}] mutiple times.
log.reserve.mustWait=L10: Reservation for user [{0}]  must wait now. Reason:\n{1}

log.reassign.currentlyReservedByUser=L11: The user [{0}] tries to reassign resource [{1}] mutiple times.

log.waitForCorrectAmount=L12: Found {0} available resource(s). Waiting for correct amount {1}.
log.buildWaitForCorrectAmount=L13: Found {0} available resource(s). The build {2} wait must wait for correct amount {1}.

log.tryLock=L14: The build [{0}] trying to acquire lock on resource [{1}].
log.acquired=L15: Lock acquired on resource [{0}] by build [{1}]
log.released=L16: Lock released on resource [{0}] used by build [{1}]

log.byUser=\ by user [{0}]
log.userRequestFails=L17: Request from user [{0}] fail. Reason:\n{1}
log.tryReserve=L18: Try to reserve resource [{0}] by user [{1}].
log.reserved=L19: Resource [{0}] reserved
log.tryUnreserve=L20: Try to un-reserve resource [{0}] by user [{1}]
log.canNotUnreserve=L21: Resource [{0}] can not be un-reserve at the moment!
log.unreserved=L21: Resource [{0}] un-reserved
log.tryUnlock=L22: Try to unlock resource [{0}] by user [{1}].
log.unlocked=L23: Resource [{0}] unlocked
log.trySteal=L24: Try to steal resource [{0}] by user [{1}].
log.canNotSteal=L25: Resource [{0}] can not be stolen at the moment!
log.stolen=L26: Resource [{0}] stolen
log.tryReassign=L27: Try to reassign resource [{0}] by user [{1}].
log.canNotReassign=L28: Resource [{0}] can not be reassign at the moment!
log.reassigned=L29: Resource [{0}] reassigned
log.tryReset=L30: Try to reset resource [{0}] by user [{1}].
log.reset=L31: Resource [{0}] reset
log.trySaveNote=L32: Try to save note for resource [{0}] by user [{1}].
log.noteSaved=L33: Resource [{0}] note saved

log.reason.reservedByCurrentUser=R1: Resource [{0}] is reserved by user [{1}] at [{2}]
log.reason.stolen=R2: Resource [{0}] is stolen by [{1}] at [{2}]
log.reason.reserved=R3: Resource [{0}] is reserved by user [{1}] at [{2}]
log.reason.locked=R4: Resource [{0}] is locked by build [{1}] at [{2}]
log.reason.queued=R5: Resource [{0}] is queued by build [{1}] at [{2}]

# display-names
LockStep.displayName=Lock shared resource
LockStepResource.displayName=Resource
LockableResource.displayName=Resource
LockableResourcesManager.displayName=External Resources
RequiredResourcesProperty.displayName=Required Lockable Resources
